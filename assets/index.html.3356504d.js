const e=JSON.parse(`{"key":"v-2d0abff7","path":"/ts/","title":"TypeScript","lang":"zh-CN","frontmatter":{"title":"TypeScript","summary":"主要记录下官网手册指南上一些未更新的东西。 TypeScript手册指南 基础类型 元组Tuple 当访问一个越界的元素，会使用联合类型替代： 这个地方是TypeScript在版本更新后会报错，目前元组的定义要求顺序和长度都要符合定义。 枚举 枚举的实现如下，主要原理是在javascript中a['a'] = 1的返回值是1原理 void 声明一个void类","head":[["meta",{"property":"og:url","content":"https://github.com/ts/"}],["meta",{"property":"og:site_name","content":"前端开发笔记心得"}],["meta",{"property":"og:title","content":"TypeScript"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-11-04T08:48:42.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2022-11-04T08:48:42.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"基础类型","slug":"基础类型","link":"#基础类型","children":[{"level":3,"title":"元组Tuple","slug":"元组tuple","link":"#元组tuple","children":[]},{"level":3,"title":"枚举","slug":"枚举","link":"#枚举","children":[]},{"level":3,"title":"void","slug":"void","link":"#void","children":[]},{"level":3,"title":"Null 和 Undefined","slug":"null-和-undefined","link":"#null-和-undefined","children":[]},{"level":3,"title":"never","slug":"never","link":"#never","children":[]}]},{"level":2,"title":"变量声明","slug":"变量声明","link":"#变量声明","children":[{"level":3,"title":"var, let const","slug":"var-let-const","link":"#var-let-const","children":[]},{"level":3,"title":"展开和解构","slug":"展开和解构","link":"#展开和解构","children":[]}]}],"git":{"createdTime":1667455284000,"updatedTime":1667551722000,"contributors":[{"name":"Shuo Shuo5 Huang","email":"huangshuo5@lenovo.com","commits":2}]},"readingTime":{"minutes":3.54,"words":1061},"filePathRelative":"ts/readme.md","localizedDate":"2022年11月3日"}`);export{e as data};
